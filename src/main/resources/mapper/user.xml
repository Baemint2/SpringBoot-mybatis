<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.moz1mozi.mybatis.user.mapper.UserMapper">
    <insert id="insertUser"
            parameterType="UserDto">
        <selectKey keyProperty="userId" resultType="long" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO User (
        user_name,
        user_pw,
        user_email,
        user_nickname,
        user_mobile,
        user_profile_image_path,
        user_role,
        user_created_at,
        user_modified_at
        ) VALUES (
            #{userName},
            #{userPw},
            #{userEmail},
            #{userNickname},
            #{userMobile},
            #{userProfileImagePath},
            #{userRole, typeHandler=com.moz1mozi.mybatis.common.typehandler.RoleTypeHandler}, now(), now())
    </insert>

    <delete id="deleteUser">
        DELETE
          FROM User u
         WHERE u.user_name = #{userName}
    </delete>

    <select id="selectMemberInfo"
            resultType="UserInfoDto">
            SELECT u.user_id, u.user_name, u.user_pw, u.user_email,
                   u.user_nickname, u.user_mobile, u.user_role,
                   u.user_created_at, u.user_modified_at
              FROM User u;
    </select>

    <select id="findByUsername"
            parameterType="UserDto">
        SELECT u.user_name, u.user_pw, u.user_email, u.user_nickname,
               u.user_mobile, u.user_profile_image_path, u.user_role, u.user_id
          FROM User u
         WHERE u.user_name = #{userName}
    </select>

    <select id="findByEmail"
            parameterType="UserDto">
        SELECT u.user_name, u.user_pw, u.user_email, u.user_nickname,
               u.user_mobile, u.user_role, u.user_id
        FROM User u
        WHERE 1 = 1
          AND u.user_email = #{userEmail}
    </select>

    <select id="findByNicknameAndEmail"
            parameterType="FindUserDto">
        SELECT u.user_name, u.user_nickname,
               u.user_email, u.user_created_at
          FROM User u
         WHERE 1 = 1
           AND u.user_nickname = #{userNickname}
           AND u.user_email = #{userEmail}
    </select>

    <select id="findByNicknameAndEmailAndUsername"
            parameterType="FindUserDto">
        SELECT u.user_name, u.user_nickname, u.user_email, u.user_created_at
        FROM User u
        WHERE 1 = 1
          AND u.user_nickname = #{userNickname}
          AND u.user_email = #{userEmail}
          AND u.user_name = #{userName}
    </select>


    <select id="findByRoleWithUsername"
            parameterType="UserDto">
        SELECT u.user_name, u.user_pw, u.user_role
          FROM User u
         WHERE u.user_name = #{userName}
    </select>

    <select id="findByUserIdByUsername"
            parameterType="UserDto">
        SELECT u.user_id
          FROM User u
         WHERE u.user_name = #{userName}
    </select>

    <select id="findByUserId"
            parameterType="UserDto">
        SELECT u.user_id, u.user_name
        FROM User u
        WHERE u.user_id = #{userId}
    </select>

    <select id="findUserIdByAddressId"
            parameterType="UserDto">
        SELECT sa.address_id, u.user_name, u.user_mobile, u.user_id
        FROM User u
        INNER JOIN ShippingAddress sa ON u.user_id = sa.user_id
        WHERE u.user_id = #{userId};
    </select>

    <!-- 중복 검사 -->
    <select id="existsByEmail"
            resultType="boolean">
        SELECT CASE WHEN COUNT(*) > 0 THEN true ELSE false END
          FROM User u
         WHERE u.user_email = #{userEmail}
    </select>
    <select id="existsByUsername"
            resultType="boolean">
        SELECT CASE WHEN COUNT(*) > 0 THEN true ELSE false END
          FROM User u
         WHERE u.user_name = #{userName}
    </select>

    <select id="existsByNickname"
            resultType="boolean">
        SELECT CASE WHEN COUNT(*) > 0 THEN true ELSE false END
          FROM User u
         WHERE u.user_nickname = #{userNickname}
    </select>

    <update id="updatePassword">
        UPDATE User u
           SET u.user_pw = #{userPw}
         WHERE u.user_name = #{userName}
    </update>

    <update id="updateNickname">
        UPDATE User u
        SET u.user_nickname = #{userNickname}
        WHERE u.user_name = #{userName}
    </update>

    <update id="updateProfileImage">
        UPDATE User u
           SET u.user_profile_image_path = #{userProfileImagePath}
         WHERE u.user_name = #{userName}
    </update>
    <select id="findUsernameByEmail"
            resultType="String">
        SELECT user_name
        FROM User u
        WHERE u.user_email = #{userEmail};
    </select>
</mapper>