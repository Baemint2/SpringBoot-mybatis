<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.moz1mozi.mybatis.cart.dao.CartDao">
    <insert id="insertCartItem"
            parameterType="com.moz1mozi.mybatis.cart.dto.CartDto">
        <selectKey keyProperty="cartItemId" resultType="long" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO CART (MEMBER_ID, PRODUCT_ID, QUANTITY, PRICE, DATE_ADDED)
        VALUES (#{memberId}, #{productId}, #{quantity}, #{price}, now())
    </insert>

    <select id="findMyCartItems"
            resultType="com.moz1mozi.mybatis.cart.dto.CartDetailDto">
        SELECT P.PRODUCT_ID ,C.CART_ITEM_ID, P.PROD_NAME, P.PROD_PRICE, P.STOCK_QUANTITY, I.STORED_URL, DATE_ADDED
        FROM PRODUCT_T P
        LEFT JOIN PRODUCT_IMAGE I ON P.PRODUCT_ID = I.PRODUCT_ID
        LEFT JOIN CART C ON P.PRODUCT_ID = C.PRODUCT_ID
        WHERE C.MEMBER_ID = #{memberId};
    </select>
    <!-- 재고 계산 -->

    <select id="getStockByProductId" parameterType="int" resultType="int">
        SELECT (P.STOCK_QUANTITY - IFNULL(SUM(C.QUANTITY), 0)) AS AVAILABLESTOCK
        FROM PRODUCT_T P
        LEFT JOIN CART C ON P.PRODUCT_ID = C.PRODUCT_ID
        WHERE P.PRODUCT_ID = #{productId}
        GROUP BY P.PRODUCT_ID;
    </select>
</mapper>