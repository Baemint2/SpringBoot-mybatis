<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.moz1mozi.mybatis.member.dao.MemberMapper">
    <insert id="insertMember"
            parameterType="MemberDto">
        <selectKey keyProperty="memberId" resultType="long" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO MEMBER_T (
        USERNAME,
        PASSWORD,
        EMAIL,
        NICKNAME,
        MOBILE,
        ROLE,
        CREATED_AT,
        MODIFIED_AT
        ) VALUES (#{username}, #{password}, #{email}, #{nickname}, #{mobile} ,#{role, typeHandler=com.moz1mozi.mybatis.typehandler.RoleTypeHandler}, now(), now())
    </insert>

    <delete id="deleteMember">
        DELETE
          FROM MEMBER_T
         WHERE USERNAME = #{username}
    </delete>

    <select id="selectMemberInfo"
            resultType="MemberInfoDto">
        SELECT MEMBER_ID, USERNAME, PASSWORD, EMAIL, NICKNAME, MOBILE, ROLE, CREATED_AT, MODIFIED_AT
        FROM MEMBER_T;
    </select>

    <select id="findByUsername"
            parameterType="MemberDto">
        SELECT USERNAME, PASSWORD, EMAIL, NICKNAME, MOBILE, ROLE, MEMBER_ID
          FROM MEMBER_T
         WHERE USERNAME = #{username}
    </select>

    <select id="findByRoleWithUsername"
            parameterType="MemberDto">
        SELECT USERNAME, PASSWORD, ROLE
          FROM MEMBER_T
         WHERE USERNAME = #{username}
    </select>

    <select id="findByMemberIdByUsername"
            parameterType="MemberDto">
        SELECT MEMBER_ID
          FROM MEMBER_T
         WHERE USERNAME = #{username}
    </select>

    <select id="findByMemberId"
            parameterType="MemberDto">
        SELECT MEMBER_ID, USERNAME
        FROM MEMBER_T
        WHERE MEMBER_ID = #{memberId}
    </select>

    <!-- 중복 검사 -->
    <select id="existsByEmail"
            resultType="boolean">
        SELECT CASE WHEN COUNT(*) > 0 THEN true ELSE false END
          FROM MEMBER_T
         WHERE EMAIL = #{email}
    </select>
    <select id="existsByUsername"
            resultType="boolean">
        SELECT CASE WHEN COUNT(*) > 0 THEN true ELSE false END
          FROM MEMBER_T
         WHERE USERNAME = #{username}
    </select>

    <select id="existsByNickname"
            resultType="boolean">
        SELECT CASE WHEN COUNT(*) > 0 THEN true ELSE false END
          FROM MEMBER_T
         WHERE NICKNAME = #{nickname}
    </select>

    <update id="updatePassword">
        UPDATE MEMBER_T
           SET PASSWORD = #{password}
         WHERE USERNAME = #{username}
    </update>

    <update id="updateNickname">
        UPDATE MEMBER_T
        SET NICKNAME = #{nickname}
        WHERE USERNAME = #{username}
    </update>

    <!--
    <update id="updateAddress">
        UPDATE MEMBER_T
        SET ZIPCODE = #{address.zipcode},
        STREETADDRESS = #{address.streetAddress},
        DETAILADDRESS = #{address.detailAddress}
        WHERE MEMBER_ID = #{memberId}
    </update>
    -->
    <select id="findUsernameByEmail"
            resultType="String">
        SELECT USERNAME
        FROM MEMBER_T
        WHERE email = #{email};
    </select>
</mapper>